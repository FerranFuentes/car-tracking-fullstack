{
  "contractName": "CarKilometerCertification",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initCertifications",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "currentKilometer",
          "type": "uint256"
        }
      ],
      "name": "certifyKilometer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getCarKilometer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getCarCertificationTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "_licensePlate",
          "type": "string"
        }
      ],
      "name": "getCarCertification",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"currentKilometer\",\"type\":\"uint256\"}],\"name\":\"certifyKilometer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_licensePlate\",\"type\":\"string\"}],\"name\":\"getCarCertification\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getCarCertificationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getCarKilometer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initCertifications\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CarKilometerCertification.sol\":\"CarKilometerCertification\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CarKilometerCertification.sol\":{\"keccak256\":\"0x9ebc6814aeb41ce8a64cddc86dbf66d7089904289783f2a164aef51bc2673164\",\"urls\":[\"bzz-raw://fe26e7f1c5c2ef68e35fb819c60c1944be9db3f058195c3f4c3429c1de3978e0\",\"dweb:/ipfs/QmdJUJbpLdKYi7bUdUuXHzSG8KEg7J6rp8otoW1KLEKM9k\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620004b7565b620000716040518060400160405280600681526020017f4142433132330000000000000000000000000000000000000000000000000000815250614e206200010760201b60201c565b620000bb6040518060400160405280600681526020017f444546343536000000000000000000000000000000000000000000000000000081525062030d406200010760201b60201c565b620001056040518060400160405280600781526020017f515745523738390000000000000000000000000000000000000000000000000081525062030d406200010760201b60201c565b565b600080836040518082805190602001908083835b602083106200014057805182526020820191506020810190506020830392506200011b565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001805460018160011615610100020316600290049050141562000254576040518060600160405280838152602001828152602001428152506000836040518082805190602001908083835b60208310620001e55780518252602082019150602081019050602083039250620001c0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000190805190602001906200023692919062000408565b50602082015181600101556040820151816002015590505062000404565b6000826040518082805190602001908083835b602083106200028c578051825260208201915060208101905060208303925062000267565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101548110156200031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018062000f02603a913960400191505060405180910390fd5b806000836040518082805190602001908083835b6020831062000356578051825260208201915060208101905060208303925062000331565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010181905550426000836040518082805190602001908083835b60208310620003c95780518252602082019150602081019050602083039250620003a4565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600201819055505b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200044b57805160ff19168380011785556200047c565b828001600101855582156200047c579182015b828111156200047b5782518255916020019190600101906200045e565b5b5090506200048b91906200048f565b5090565b620004b491905b80821115620004b057600081600090555060010162000496565b5090565b90565b610a3b80620004c76000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636e60da1a1461005c57806370a5bf4e1461012157806387317f6d146101f7578063960b4e5d146102c6578063dcd374f714610395575b600080fd5b61011f6004803603604081101561007257600080fd5b810190808035906020019064010000000081111561008f57600080fd5b8201836020820111156100a157600080fd5b803590602001918460018302840111640100000000831117156100c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061039f565b005b6101da6004803603602081101561013757600080fd5b810190808035906020019064010000000081111561015457600080fd5b82018360208201111561016657600080fd5b8035906020019184600183028401116401000000008311171561018857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610690565b604051808381526020018281526020019250505060405180910390f35b6102b06004803603602081101561020d57600080fd5b810190808035906020019064010000000081111561022a57600080fd5b82018360208201111561023c57600080fd5b8035906020019184600183028401116401000000008311171561025e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610776565b6040518082815260200191505060405180910390f35b61037f600480360360208110156102dc57600080fd5b81019080803590602001906401000000008111156102f957600080fd5b82018360208201111561030b57600080fd5b8035906020019184600183028401116401000000008311171561032d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107eb565b6040518082815260200191505060405180910390f35b61039d610860565b005b600080836040518082805190602001908083835b602083106103d657805182526020820191506020810190506020830392506103b3565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000180546001816001161561010002031660029004905014156104e4576040518060600160405280838152602001828152602001428152506000836040518082805190602001908083835b602083106104785780518252602082019150602081019050602083039250610455565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000190805190602001906104c7929190610927565b50602082015181600101556040820151816002015590505061068c565b6000826040518082805190602001908083835b6020831061051a57805182526020820191506020810190506020830392506104f7565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101548110156105a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806109cd603a913960400191505060405180910390fd5b806000836040518082805190602001908083835b602083106105e057805182526020820191506020810190506020830392506105bd565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010181905550426000836040518082805190602001908083835b60208310610651578051825260208201915060208101905060208303925061062e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600201819055505b5050565b6000806000836040518082805190602001908083835b602083106106c957805182526020820191506020810190506020830392506106a6565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101546000846040518082805190602001908083835b602083106107365780518252602082019150602081019050602083039250610713565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002015491509150915091565b600080826040518082805190602001908083835b602083106107ad578051825260208201915060208101905060208303925061078a565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600201549050919050565b600080826040518082805190602001908083835b6020831061082257805182526020820191506020810190506020830392506107ff565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101549050919050565b6108a16040518060400160405280600681526020017f4142433132330000000000000000000000000000000000000000000000000000815250614e2061039f565b6108e36040518060400160405280600681526020017f444546343536000000000000000000000000000000000000000000000000000081525062030d4061039f565b6109256040518060400160405280600781526020017f515745523738390000000000000000000000000000000000000000000000000081525062030d4061039f565b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061096857805160ff1916838001178555610996565b82800160010185558215610996579182015b8281111561099557825182559160200191906001019061097a565b5b5090506109a391906109a7565b5090565b6109c991905b808211156109c55760008160009055506001016109ad565b5090565b9056fe4e6577206b696c6f6d657465722076616c75652073686f756c64206e6f74206265206c657373207468616e2070726576696f75732076616c7565a265627a7a72315820c4bd44ff727904790b3d9661a82642f7ac912af8434e71d200671dfcce75393e64736f6c634300051000324e6577206b696c6f6d657465722076616c75652073686f756c64206e6f74206265206c657373207468616e2070726576696f75732076616c7565",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80636e60da1a1461005c57806370a5bf4e1461012157806387317f6d146101f7578063960b4e5d146102c6578063dcd374f714610395575b600080fd5b61011f6004803603604081101561007257600080fd5b810190808035906020019064010000000081111561008f57600080fd5b8201836020820111156100a157600080fd5b803590602001918460018302840111640100000000831117156100c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061039f565b005b6101da6004803603602081101561013757600080fd5b810190808035906020019064010000000081111561015457600080fd5b82018360208201111561016657600080fd5b8035906020019184600183028401116401000000008311171561018857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610690565b604051808381526020018281526020019250505060405180910390f35b6102b06004803603602081101561020d57600080fd5b810190808035906020019064010000000081111561022a57600080fd5b82018360208201111561023c57600080fd5b8035906020019184600183028401116401000000008311171561025e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610776565b6040518082815260200191505060405180910390f35b61037f600480360360208110156102dc57600080fd5b81019080803590602001906401000000008111156102f957600080fd5b82018360208201111561030b57600080fd5b8035906020019184600183028401116401000000008311171561032d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107eb565b6040518082815260200191505060405180910390f35b61039d610860565b005b600080836040518082805190602001908083835b602083106103d657805182526020820191506020810190506020830392506103b3565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000180546001816001161561010002031660029004905014156104e4576040518060600160405280838152602001828152602001428152506000836040518082805190602001908083835b602083106104785780518252602082019150602081019050602083039250610455565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000190805190602001906104c7929190610927565b50602082015181600101556040820151816002015590505061068c565b6000826040518082805190602001908083835b6020831061051a57805182526020820191506020810190506020830392506104f7565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101548110156105a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806109cd603a913960400191505060405180910390fd5b806000836040518082805190602001908083835b602083106105e057805182526020820191506020810190506020830392506105bd565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010181905550426000836040518082805190602001908083835b60208310610651578051825260208201915060208101905060208303925061062e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600201819055505b5050565b6000806000836040518082805190602001908083835b602083106106c957805182526020820191506020810190506020830392506106a6565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101546000846040518082805190602001908083835b602083106107365780518252602082019150602081019050602083039250610713565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002015491509150915091565b600080826040518082805190602001908083835b602083106107ad578051825260208201915060208101905060208303925061078a565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600201549050919050565b600080826040518082805190602001908083835b6020831061082257805182526020820191506020810190506020830392506107ff565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101549050919050565b6108a16040518060400160405280600681526020017f4142433132330000000000000000000000000000000000000000000000000000815250614e2061039f565b6108e36040518060400160405280600681526020017f444546343536000000000000000000000000000000000000000000000000000081525062030d4061039f565b6109256040518060400160405280600781526020017f515745523738390000000000000000000000000000000000000000000000000081525062030d4061039f565b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061096857805160ff1916838001178555610996565b82800160010185558215610996579182015b8281111561099557825182559160200191906001019061097a565b5b5090506109a391906109a7565b5090565b6109c991905b808211156109c55760008160009055506001016109ad565b5090565b9056fe4e6577206b696c6f6d657465722076616c75652073686f756c64206e6f74206265206c657373207468616e2070726576696f75732076616c7565a265627a7a72315820c4bd44ff727904790b3d9661a82642f7ac912af8434e71d200671dfcce75393e64736f6c63430005100032",
  "sourceMap": "26:1871:0:-;;;63:50;8:9:-1;5:2;;;30:1;27;20:12;5:2;63:50:0;90:20;:18;;;:20;;:::i;:::-;26:1871;;115:400;398:33;;;;;;;;;;;;;;;;;;425:5;398:16;;;:33;;:::i;:::-;437:34;;;;;;;;;;;;;;;;;;464:6;437:16;;;:34;;:::i;:::-;477:35;;;;;;;;;;;;;;;;;;505:6;477:16;;;:35;;:::i;:::-;115:400::o;745:545::-;895:1;852:4;857:12;852:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;852:18:0;;;;;;;;;;;;;;;;;;;;;:31;;846:45;;;;;;;;;;;;;;;;:50;842:442;;;933:52;;;;;;;;937:12;933:52;;;;951:16;933:52;;;;969:15;933:52;;;912:4;917:12;912:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;912:18:0;;;;;;;;;;;;;;;;;;;;;:73;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;842:442;;;1052:4;1057:12;1052:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1052:18:0;;;;;;;;;;;;;;;;;;;;;:28;;;1032:16;:48;;1024:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:16;1157:4;1162:12;1157:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1157:18:0;;;;;;;;;;;;;;;;;;;;;:28;;:47;;;;1258:15;1218:4;1223:12;1218:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1218:18:0;;;;;;;;;;;;;;;;;;;;;:37;;:55;;;;842:442;745:545;;:::o;26:1871::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "26:1871:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:1871:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;745:545;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;745:545:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;745:545:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;745:545:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;745:545:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;745:545:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1706:188;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1706:188:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1706:188:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1706:188:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1706:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1706:188:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1543:157;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1543:157:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1543:157:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1543:157:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1543:157:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1543:157:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1345:135;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1345:135:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1345:135:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1345:135:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1345:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1345:135:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;115:400;;;:::i;:::-;;745:545;895:1;852:4;857:12;852:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;852:18:0;;;;;;;;;;;;;;;;;;;;;:31;;846:45;;;;;;;;;;;;;;;;:50;842:442;;;933:52;;;;;;;;937:12;933:52;;;;951:16;933:52;;;;969:15;933:52;;;912:4;917:12;912:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;912:18:0;;;;;;;;;;;;;;;;;;;;;:73;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;842:442;;;1052:4;1057:12;1052:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1052:18:0;;;;;;;;;;;;;;;;;;;;;:28;;;1032:16;:48;;1024:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:16;1157:4;1162:12;1157:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1157:18:0;;;;;;;;;;;;;;;;;;;;;:28;;:47;;;;1258:15;1218:4;1223:12;1218:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1218:18:0;;;;;;;;;;;;;;;;;;;;;:37;;:55;;;;842:442;745:545;;:::o;1706:188::-;1785:7;1794;1817:4;1822:13;1817:19;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1817:19:0;;;;;;;;;;;;;;;;;;;;;:29;;;1848:4;1853:13;1848:19;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1848:19:0;;;;;;;;;;;;;;;;;;;;;:38;;;1809:78;;;;1706:188;;;:::o;1543:157::-;1630:7;1656:4;1661:12;1656:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1656:18:0;;;;;;;;;;;;;;;;;;;;;:37;;;1649:44;;1543:157;;;:::o;1345:135::-;1419:7;1445:4;1450:12;1445:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1445:18:0;;;;;;;;;;;;;;;;;;;;;:28;;;1438:35;;1345:135;;;:::o;115:400::-;398:33;;;;;;;;;;;;;;;;;;425:5;398:16;:33::i;:::-;437:34;;;;;;;;;;;;;;;;;;464:6;437:16;:34::i;:::-;477:35;;;;;;;;;;;;;;;;;;505:6;477:16;:35::i;:::-;115:400::o;26:1871::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\n\ncontract CarKilometerCertification {\nconstructor() public {\n    initCertifications();\n}\n\nfunction initCertifications() public {\n    // Aquí es donde puedes agregar los certificados iniciales\n    // utilizando la función `certifyKilometer` del contrato.\n    //estos certificados se usan para no inicalizar la blockchain vacia y probar el frontend\n    // Por ejemplo:\n    certifyKilometer(\"ABC123\", 20000);\n    certifyKilometer(\"DEF456\", 200000);\n    certifyKilometer(\"QWER789\", 200000);\n}\n\n    struct Car {\n        string  licensePlate;\n        uint256  kilometer;\n        uint256  certifiedTimestamp;\n    }\n\n    mapping (string => Car) cars;\n\n    //Certifica un nuevo kilometraje con su timestamp correspondiente\n    function certifyKilometer(string memory licensePlate, uint256 currentKilometer) public {\n        if (bytes(cars[licensePlate].licensePlate).length == 0) {\n            cars[licensePlate] = Car(licensePlate, currentKilometer, block.timestamp);\n        }\n        else {\n            require(currentKilometer >= cars[licensePlate].kilometer, \"New kilometer value should not be less than previous value\");\n            cars[licensePlate].kilometer = currentKilometer;\n            cars[licensePlate].certifiedTimestamp = block.timestamp;\n        }\n    }\n\n    //devuelve los kilometros actuales del coche\n    function getCarKilometer(string memory licensePlate) public view returns (uint256) {\n        return cars[licensePlate].kilometer;\n    }\n\n    //Devuelve el timestamp de la última certificación\n    function getCarCertificationTimestamp(string memory licensePlate) public view returns (uint256) {\n        return cars[licensePlate].certifiedTimestamp;\n    }\n\n    function getCarCertification(string memory _licensePlate) public view returns (uint256, uint256) {\n    return (cars[_licensePlate].kilometer, cars[_licensePlate].certifiedTimestamp);\n    }\n\n}\n\n\n",
  "sourcePath": "/home/lionheart/Uni/PTI/project/car-tracking-fullstack/blockchain/contracts/CarKilometerCertification.sol",
  "ast": {
    "absolutePath": "project:/contracts/CarKilometerCertification.sol",
    "exportedSymbols": {
      "CarKilometerCertification": [
        141
      ]
    },
    "id": 142,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 141,
        "linearizedBaseContracts": [
          141
        ],
        "name": "CarKilometerCertification",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7,
              "nodeType": "Block",
              "src": "84:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4,
                      "name": "initCertifications",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "90:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "90:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6,
                  "nodeType": "ExpressionStatement",
                  "src": "90:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 8,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "74:2:0"
            },
            "returnParameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "84:0:0"
            },
            "scope": 141,
            "src": "63:50:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "152:363:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "414243313233",
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "415:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb28303106dbfbadda4b9d1faf44c80368b4b8a4b642550fd48b760a61a9c12",
                          "typeString": "literal_string \"ABC123\""
                        },
                        "value": "ABC123"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3230303030",
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "425:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000_by_1",
                          "typeString": "int_const 20000"
                        },
                        "value": "20000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dbb28303106dbfbadda4b9d1faf44c80368b4b8a4b642550fd48b760a61a9c12",
                          "typeString": "literal_string \"ABC123\""
                        },
                        {
                          "typeIdentifier": "t_rational_20000_by_1",
                          "typeString": "int_const 20000"
                        }
                      ],
                      "id": 11,
                      "name": "certifyKilometer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "398:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "398:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "398:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "444546343536",
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "454:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62fbd82d6cdcda83ea02b5afedee9460142127e237e25aa14f35fd5b3857ad64",
                          "typeString": "literal_string \"DEF456\""
                        },
                        "value": "DEF456"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "323030303030",
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "464:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        "value": "200000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_62fbd82d6cdcda83ea02b5afedee9460142127e237e25aa14f35fd5b3857ad64",
                          "typeString": "literal_string \"DEF456\""
                        },
                        {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        }
                      ],
                      "id": 16,
                      "name": "certifyKilometer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "437:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "437:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "437:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "51574552373839",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "494:9:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77fb0491838f3b4860fba7709441b764aa486319f23f3647528218c26efab9a0",
                          "typeString": "literal_string \"QWER789\""
                        },
                        "value": "QWER789"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "323030303030",
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "505:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        "value": "200000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_77fb0491838f3b4860fba7709441b764aa486319f23f3647528218c26efab9a0",
                          "typeString": "literal_string \"QWER789\""
                        },
                        {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        }
                      ],
                      "id": 21,
                      "name": "certifyKilometer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "477:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "477:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "477:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initCertifications",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "142:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "152:0:0"
            },
            "scope": 141,
            "src": "115:400:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CarKilometerCertification.Car",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 29,
                "name": "licensePlate",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "542:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 28,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "542:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "name": "kilometer",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "572:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "572:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "name": "certifiedTimestamp",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "600:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "600:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Car",
            "nodeType": "StructDefinition",
            "scope": 141,
            "src": "521:113:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 38,
            "name": "cars",
            "nodeType": "VariableDeclaration",
            "scope": 141,
            "src": "640:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
              "typeString": "mapping(string => struct CarKilometerCertification.Car)"
            },
            "typeName": {
              "id": 37,
              "keyType": {
                "id": 35,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "649:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "640:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
                "typeString": "mapping(string => struct CarKilometerCertification.Car)"
              },
              "valueType": {
                "contractScope": null,
                "id": 36,
                "name": "Car",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 34,
                "src": "659:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Car_$34_storage_ptr",
                  "typeString": "struct CarKilometerCertification.Car"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "832:458:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 46,
                                "name": "cars",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "852:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
                                  "typeString": "mapping(string memory => struct CarKilometerCertification.Car storage ref)"
                                }
                              },
                              "id": 48,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 47,
                                "name": "licensePlate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "857:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "852:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Car_$34_storage",
                                "typeString": "struct CarKilometerCertification.Car storage ref"
                              }
                            },
                            "id": 49,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "licensePlate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "852:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "846:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "846:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "846:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "895:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "846:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 91,
                    "nodeType": "Block",
                    "src": "1010:274:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 67,
                                "name": "currentKilometer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "1032:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 68,
                                    "name": "cars",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38,
                                    "src": "1052:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
                                      "typeString": "mapping(string memory => struct CarKilometerCertification.Car storage ref)"
                                    }
                                  },
                                  "id": 70,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 69,
                                    "name": "licensePlate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "1057:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1052:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Car_$34_storage",
                                    "typeString": "struct CarKilometerCertification.Car storage ref"
                                  }
                                },
                                "id": 71,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "kilometer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31,
                                "src": "1052:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1032:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4e6577206b696c6f6d657465722076616c75652073686f756c64206e6f74206265206c657373207468616e2070726576696f75732076616c7565",
                              "id": 73,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1082:60:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94a17c59c3251be710b78abd39ec534d1fe1093bc3b077b635463a949808a2f4",
                                "typeString": "literal_string \"New kilometer value should not be less than previous value\""
                              },
                              "value": "New kilometer value should not be less than previous value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94a17c59c3251be710b78abd39ec534d1fe1093bc3b077b635463a949808a2f4",
                                "typeString": "literal_string \"New kilometer value should not be less than previous value\""
                              }
                            ],
                            "id": 66,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              192,
                              193
                            ],
                            "referencedDeclaration": 193,
                            "src": "1024:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1024:119:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 75,
                        "nodeType": "ExpressionStatement",
                        "src": "1024:119:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 76,
                                "name": "cars",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "1157:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
                                  "typeString": "mapping(string memory => struct CarKilometerCertification.Car storage ref)"
                                }
                              },
                              "id": 78,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 77,
                                "name": "licensePlate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "1162:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1157:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Car_$34_storage",
                                "typeString": "struct CarKilometerCertification.Car storage ref"
                              }
                            },
                            "id": 79,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "kilometer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "1157:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "currentKilometer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "1188:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1157:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 82,
                        "nodeType": "ExpressionStatement",
                        "src": "1157:47:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 83,
                                "name": "cars",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "1218:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
                                  "typeString": "mapping(string memory => struct CarKilometerCertification.Car storage ref)"
                                }
                              },
                              "id": 85,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 84,
                                "name": "licensePlate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "1223:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1218:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Car_$34_storage",
                                "typeString": "struct CarKilometerCertification.Car storage ref"
                              }
                            },
                            "id": 86,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "certifiedTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "1218:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 87,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "1258:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1258:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1218:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 90,
                        "nodeType": "ExpressionStatement",
                        "src": "1218:55:0"
                      }
                    ]
                  },
                  "id": 92,
                  "nodeType": "IfStatement",
                  "src": "842:442:0",
                  "trueBody": {
                    "id": 65,
                    "nodeType": "Block",
                    "src": "898:98:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "cars",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "912:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
                                "typeString": "mapping(string memory => struct CarKilometerCertification.Car storage ref)"
                              }
                            },
                            "id": 56,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 55,
                              "name": "licensePlate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "917:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "912:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Car_$34_storage",
                              "typeString": "struct CarKilometerCertification.Car storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 58,
                                "name": "licensePlate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "937:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 59,
                                "name": "currentKilometer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "951:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 60,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 179,
                                  "src": "969:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 61,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "969:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 57,
                              "name": "Car",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "933:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Car_$34_storage_ptr_$",
                                "typeString": "type(struct CarKilometerCertification.Car storage pointer)"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "933:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Car_$34_memory",
                              "typeString": "struct CarKilometerCertification.Car memory"
                            }
                          },
                          "src": "912:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Car_$34_storage",
                            "typeString": "struct CarKilometerCertification.Car storage ref"
                          }
                        },
                        "id": 64,
                        "nodeType": "ExpressionStatement",
                        "src": "912:73:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "certifyKilometer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "licensePlate",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "771:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "currentKilometer",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "799:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "770:54:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:0:0"
            },
            "scope": 141,
            "src": "745:545:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1428:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "cars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1445:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
                          "typeString": "mapping(string memory => struct CarKilometerCertification.Car storage ref)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "licensePlate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1450:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1445:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Car_$34_storage",
                        "typeString": "struct CarKilometerCertification.Car storage ref"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "kilometer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 31,
                    "src": "1445:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 100,
                  "id": 105,
                  "nodeType": "Return",
                  "src": "1438:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCarKilometer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "licensePlate",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1370:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1369:28:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1419:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1418:9:0"
            },
            "scope": 141,
            "src": "1345:135:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1639:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 114,
                        "name": "cars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1656:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
                          "typeString": "mapping(string memory => struct CarKilometerCertification.Car storage ref)"
                        }
                      },
                      "id": 116,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "licensePlate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1661:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1656:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Car_$34_storage",
                        "typeString": "struct CarKilometerCertification.Car storage ref"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "certifiedTimestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33,
                    "src": "1656:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 113,
                  "id": 118,
                  "nodeType": "Return",
                  "src": "1649:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCarCertificationTimestamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "licensePlate",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1581:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1580:28:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1630:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1630:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1629:9:0"
            },
            "scope": 141,
            "src": "1543:157:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1803:91:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 129,
                            "name": "cars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1817:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
                              "typeString": "mapping(string memory => struct CarKilometerCertification.Car storage ref)"
                            }
                          },
                          "id": 131,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 130,
                            "name": "_licensePlate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "1822:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1817:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Car_$34_storage",
                            "typeString": "struct CarKilometerCertification.Car storage ref"
                          }
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "kilometer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "1817:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 133,
                            "name": "cars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1848:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Car_$34_storage_$",
                              "typeString": "mapping(string memory => struct CarKilometerCertification.Car storage ref)"
                            }
                          },
                          "id": 135,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "_licensePlate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "1853:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1848:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Car_$34_storage",
                            "typeString": "struct CarKilometerCertification.Car storage ref"
                          }
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certifiedTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "1848:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 137,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1816:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 128,
                  "id": 138,
                  "nodeType": "Return",
                  "src": "1809:78:0"
                }
              ]
            },
            "documentation": null,
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCarCertification",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "name": "_licensePlate",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1735:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1734:29:0"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1785:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1785:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1794:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1784:18:0"
            },
            "scope": 141,
            "src": "1706:188:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 142,
        "src": "26:1871:0"
      }
    ],
    "src": "0:1900:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/CarKilometerCertification.sol",
      "exportedSymbols": {
        "CarKilometerCertification": [
          141
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            141
          ],
          "name": "CarKilometerCertification",
          "scope": 142
        },
        "children": [
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 141,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2,
                "name": "ParameterList",
                "src": "74:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3,
                "name": "ParameterList",
                "src": "84:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27,
                              "type": "function ()",
                              "value": "initCertifications"
                            },
                            "id": 4,
                            "name": "Identifier",
                            "src": "90:18:0"
                          }
                        ],
                        "id": 5,
                        "name": "FunctionCall",
                        "src": "90:20:0"
                      }
                    ],
                    "id": 6,
                    "name": "ExpressionStatement",
                    "src": "90:20:0"
                  }
                ],
                "id": 7,
                "name": "Block",
                "src": "84:29:0"
              }
            ],
            "id": 8,
            "name": "FunctionDefinition",
            "src": "63:50:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "initCertifications",
              "scope": 141,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 9,
                "name": "ParameterList",
                "src": "142:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 10,
                "name": "ParameterList",
                "src": "152:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_dbb28303106dbfbadda4b9d1faf44c80368b4b8a4b642550fd48b760a61a9c12",
                                  "typeString": "literal_string \"ABC123\""
                                },
                                {
                                  "typeIdentifier": "t_rational_20000_by_1",
                                  "typeString": "int_const 20000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 94,
                              "type": "function (string memory,uint256)",
                              "value": "certifyKilometer"
                            },
                            "id": 11,
                            "name": "Identifier",
                            "src": "398:16:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "414243313233",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"ABC123\"",
                              "value": "ABC123"
                            },
                            "id": 12,
                            "name": "Literal",
                            "src": "415:8:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "3230303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 20000",
                              "value": "20000"
                            },
                            "id": 13,
                            "name": "Literal",
                            "src": "425:5:0"
                          }
                        ],
                        "id": 14,
                        "name": "FunctionCall",
                        "src": "398:33:0"
                      }
                    ],
                    "id": 15,
                    "name": "ExpressionStatement",
                    "src": "398:33:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_62fbd82d6cdcda83ea02b5afedee9460142127e237e25aa14f35fd5b3857ad64",
                                  "typeString": "literal_string \"DEF456\""
                                },
                                {
                                  "typeIdentifier": "t_rational_200000_by_1",
                                  "typeString": "int_const 200000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 94,
                              "type": "function (string memory,uint256)",
                              "value": "certifyKilometer"
                            },
                            "id": 16,
                            "name": "Identifier",
                            "src": "437:16:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "444546343536",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"DEF456\"",
                              "value": "DEF456"
                            },
                            "id": 17,
                            "name": "Literal",
                            "src": "454:8:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "323030303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 200000",
                              "value": "200000"
                            },
                            "id": 18,
                            "name": "Literal",
                            "src": "464:6:0"
                          }
                        ],
                        "id": 19,
                        "name": "FunctionCall",
                        "src": "437:34:0"
                      }
                    ],
                    "id": 20,
                    "name": "ExpressionStatement",
                    "src": "437:34:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_77fb0491838f3b4860fba7709441b764aa486319f23f3647528218c26efab9a0",
                                  "typeString": "literal_string \"QWER789\""
                                },
                                {
                                  "typeIdentifier": "t_rational_200000_by_1",
                                  "typeString": "int_const 200000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 94,
                              "type": "function (string memory,uint256)",
                              "value": "certifyKilometer"
                            },
                            "id": 21,
                            "name": "Identifier",
                            "src": "477:16:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "51574552373839",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"QWER789\"",
                              "value": "QWER789"
                            },
                            "id": 22,
                            "name": "Literal",
                            "src": "494:9:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "323030303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 200000",
                              "value": "200000"
                            },
                            "id": 23,
                            "name": "Literal",
                            "src": "505:6:0"
                          }
                        ],
                        "id": 24,
                        "name": "FunctionCall",
                        "src": "477:35:0"
                      }
                    ],
                    "id": 25,
                    "name": "ExpressionStatement",
                    "src": "477:35:0"
                  }
                ],
                "id": 26,
                "name": "Block",
                "src": "152:363:0"
              }
            ],
            "id": 27,
            "name": "FunctionDefinition",
            "src": "115:400:0"
          },
          {
            "attributes": {
              "canonicalName": "CarKilometerCertification.Car",
              "name": "Car",
              "scope": 141,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "licensePlate",
                  "scope": 34,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 28,
                    "name": "ElementaryTypeName",
                    "src": "542:6:0"
                  }
                ],
                "id": 29,
                "name": "VariableDeclaration",
                "src": "542:20:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "kilometer",
                  "scope": 34,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 30,
                    "name": "ElementaryTypeName",
                    "src": "572:7:0"
                  }
                ],
                "id": 31,
                "name": "VariableDeclaration",
                "src": "572:18:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "certifiedTimestamp",
                  "scope": 34,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 32,
                    "name": "ElementaryTypeName",
                    "src": "600:7:0"
                  }
                ],
                "id": 33,
                "name": "VariableDeclaration",
                "src": "600:27:0"
              }
            ],
            "id": 34,
            "name": "StructDefinition",
            "src": "521:113:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "cars",
              "scope": 141,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => struct CarKilometerCertification.Car)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => struct CarKilometerCertification.Car)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 35,
                    "name": "ElementaryTypeName",
                    "src": "649:6:0"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Car",
                      "referencedDeclaration": 34,
                      "type": "struct CarKilometerCertification.Car"
                    },
                    "id": 36,
                    "name": "UserDefinedTypeName",
                    "src": "659:3:0"
                  }
                ],
                "id": 37,
                "name": "Mapping",
                "src": "640:23:0"
              }
            ],
            "id": 38,
            "name": "VariableDeclaration",
            "src": "640:28:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "certifyKilometer",
              "scope": 141,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "licensePlate",
                      "scope": 94,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 39,
                        "name": "ElementaryTypeName",
                        "src": "771:6:0"
                      }
                    ],
                    "id": 40,
                    "name": "VariableDeclaration",
                    "src": "771:26:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "currentKilometer",
                      "scope": 94,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 41,
                        "name": "ElementaryTypeName",
                        "src": "799:7:0"
                      }
                    ],
                    "id": 42,
                    "name": "VariableDeclaration",
                    "src": "799:24:0"
                  }
                ],
                "id": 43,
                "name": "ParameterList",
                "src": "770:54:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 44,
                "name": "ParameterList",
                "src": "832:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes storage pointer",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes storage pointer)",
                                      "value": "bytes"
                                    },
                                    "id": 45,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "846:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "licensePlate",
                                      "referencedDeclaration": 29,
                                      "type": "string storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct CarKilometerCertification.Car storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 38,
                                              "type": "mapping(string memory => struct CarKilometerCertification.Car storage ref)",
                                              "value": "cars"
                                            },
                                            "id": 46,
                                            "name": "Identifier",
                                            "src": "852:4:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 40,
                                              "type": "string memory",
                                              "value": "licensePlate"
                                            },
                                            "id": 47,
                                            "name": "Identifier",
                                            "src": "857:12:0"
                                          }
                                        ],
                                        "id": 48,
                                        "name": "IndexAccess",
                                        "src": "852:18:0"
                                      }
                                    ],
                                    "id": 49,
                                    "name": "MemberAccess",
                                    "src": "852:31:0"
                                  }
                                ],
                                "id": 50,
                                "name": "FunctionCall",
                                "src": "846:38:0"
                              }
                            ],
                            "id": 51,
                            "name": "MemberAccess",
                            "src": "846:45:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 52,
                            "name": "Literal",
                            "src": "895:1:0"
                          }
                        ],
                        "id": 53,
                        "name": "BinaryOperation",
                        "src": "846:50:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "struct CarKilometerCertification.Car storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct CarKilometerCertification.Car storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 38,
                                          "type": "mapping(string memory => struct CarKilometerCertification.Car storage ref)",
                                          "value": "cars"
                                        },
                                        "id": 54,
                                        "name": "Identifier",
                                        "src": "912:4:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "string memory",
                                          "value": "licensePlate"
                                        },
                                        "id": 55,
                                        "name": "Identifier",
                                        "src": "917:12:0"
                                      }
                                    ],
                                    "id": 56,
                                    "name": "IndexAccess",
                                    "src": "912:18:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": true,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "struct CarKilometerCertification.Car memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 34,
                                          "type": "type(struct CarKilometerCertification.Car storage pointer)",
                                          "value": "Car"
                                        },
                                        "id": 57,
                                        "name": "Identifier",
                                        "src": "933:3:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "string memory",
                                          "value": "licensePlate"
                                        },
                                        "id": 58,
                                        "name": "Identifier",
                                        "src": "937:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 42,
                                          "type": "uint256",
                                          "value": "currentKilometer"
                                        },
                                        "id": 59,
                                        "name": "Identifier",
                                        "src": "951:16:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "timestamp",
                                          "referencedDeclaration": null,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 179,
                                              "type": "block",
                                              "value": "block"
                                            },
                                            "id": 60,
                                            "name": "Identifier",
                                            "src": "969:5:0"
                                          }
                                        ],
                                        "id": 61,
                                        "name": "MemberAccess",
                                        "src": "969:15:0"
                                      }
                                    ],
                                    "id": 62,
                                    "name": "FunctionCall",
                                    "src": "933:52:0"
                                  }
                                ],
                                "id": 63,
                                "name": "Assignment",
                                "src": "912:73:0"
                              }
                            ],
                            "id": 64,
                            "name": "ExpressionStatement",
                            "src": "912:73:0"
                          }
                        ],
                        "id": 65,
                        "name": "Block",
                        "src": "898:98:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_94a17c59c3251be710b78abd39ec534d1fe1093bc3b077b635463a949808a2f4",
                                          "typeString": "literal_string \"New kilometer value should not be less than previous value\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        192,
                                        193
                                      ],
                                      "referencedDeclaration": 193,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 66,
                                    "name": "Identifier",
                                    "src": "1024:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 42,
                                          "type": "uint256",
                                          "value": "currentKilometer"
                                        },
                                        "id": 67,
                                        "name": "Identifier",
                                        "src": "1032:16:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "kilometer",
                                          "referencedDeclaration": 31,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CarKilometerCertification.Car storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 38,
                                                  "type": "mapping(string memory => struct CarKilometerCertification.Car storage ref)",
                                                  "value": "cars"
                                                },
                                                "id": 68,
                                                "name": "Identifier",
                                                "src": "1052:4:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 40,
                                                  "type": "string memory",
                                                  "value": "licensePlate"
                                                },
                                                "id": 69,
                                                "name": "Identifier",
                                                "src": "1057:12:0"
                                              }
                                            ],
                                            "id": 70,
                                            "name": "IndexAccess",
                                            "src": "1052:18:0"
                                          }
                                        ],
                                        "id": 71,
                                        "name": "MemberAccess",
                                        "src": "1052:28:0"
                                      }
                                    ],
                                    "id": 72,
                                    "name": "BinaryOperation",
                                    "src": "1032:48:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "4e6577206b696c6f6d657465722076616c75652073686f756c64206e6f74206265206c657373207468616e2070726576696f75732076616c7565",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"New kilometer value should not be less than previous value\"",
                                      "value": "New kilometer value should not be less than previous value"
                                    },
                                    "id": 73,
                                    "name": "Literal",
                                    "src": "1082:60:0"
                                  }
                                ],
                                "id": 74,
                                "name": "FunctionCall",
                                "src": "1024:119:0"
                              }
                            ],
                            "id": 75,
                            "name": "ExpressionStatement",
                            "src": "1024:119:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "kilometer",
                                      "referencedDeclaration": 31,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct CarKilometerCertification.Car storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 38,
                                              "type": "mapping(string memory => struct CarKilometerCertification.Car storage ref)",
                                              "value": "cars"
                                            },
                                            "id": 76,
                                            "name": "Identifier",
                                            "src": "1157:4:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 40,
                                              "type": "string memory",
                                              "value": "licensePlate"
                                            },
                                            "id": 77,
                                            "name": "Identifier",
                                            "src": "1162:12:0"
                                          }
                                        ],
                                        "id": 78,
                                        "name": "IndexAccess",
                                        "src": "1157:18:0"
                                      }
                                    ],
                                    "id": 79,
                                    "name": "MemberAccess",
                                    "src": "1157:28:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 42,
                                      "type": "uint256",
                                      "value": "currentKilometer"
                                    },
                                    "id": 80,
                                    "name": "Identifier",
                                    "src": "1188:16:0"
                                  }
                                ],
                                "id": 81,
                                "name": "Assignment",
                                "src": "1157:47:0"
                              }
                            ],
                            "id": 82,
                            "name": "ExpressionStatement",
                            "src": "1157:47:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "certifiedTimestamp",
                                      "referencedDeclaration": 33,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct CarKilometerCertification.Car storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 38,
                                              "type": "mapping(string memory => struct CarKilometerCertification.Car storage ref)",
                                              "value": "cars"
                                            },
                                            "id": 83,
                                            "name": "Identifier",
                                            "src": "1218:4:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 40,
                                              "type": "string memory",
                                              "value": "licensePlate"
                                            },
                                            "id": 84,
                                            "name": "Identifier",
                                            "src": "1223:12:0"
                                          }
                                        ],
                                        "id": 85,
                                        "name": "IndexAccess",
                                        "src": "1218:18:0"
                                      }
                                    ],
                                    "id": 86,
                                    "name": "MemberAccess",
                                    "src": "1218:37:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "timestamp",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 179,
                                          "type": "block",
                                          "value": "block"
                                        },
                                        "id": 87,
                                        "name": "Identifier",
                                        "src": "1258:5:0"
                                      }
                                    ],
                                    "id": 88,
                                    "name": "MemberAccess",
                                    "src": "1258:15:0"
                                  }
                                ],
                                "id": 89,
                                "name": "Assignment",
                                "src": "1218:55:0"
                              }
                            ],
                            "id": 90,
                            "name": "ExpressionStatement",
                            "src": "1218:55:0"
                          }
                        ],
                        "id": 91,
                        "name": "Block",
                        "src": "1010:274:0"
                      }
                    ],
                    "id": 92,
                    "name": "IfStatement",
                    "src": "842:442:0"
                  }
                ],
                "id": 93,
                "name": "Block",
                "src": "832:458:0"
              }
            ],
            "id": 94,
            "name": "FunctionDefinition",
            "src": "745:545:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getCarKilometer",
              "scope": 141,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "licensePlate",
                      "scope": 107,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 95,
                        "name": "ElementaryTypeName",
                        "src": "1370:6:0"
                      }
                    ],
                    "id": 96,
                    "name": "VariableDeclaration",
                    "src": "1370:26:0"
                  }
                ],
                "id": 97,
                "name": "ParameterList",
                "src": "1369:28:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 107,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 98,
                        "name": "ElementaryTypeName",
                        "src": "1419:7:0"
                      }
                    ],
                    "id": 99,
                    "name": "VariableDeclaration",
                    "src": "1419:7:0"
                  }
                ],
                "id": 100,
                "name": "ParameterList",
                "src": "1418:9:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 100
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "kilometer",
                          "referencedDeclaration": 31,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct CarKilometerCertification.Car storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 38,
                                  "type": "mapping(string memory => struct CarKilometerCertification.Car storage ref)",
                                  "value": "cars"
                                },
                                "id": 101,
                                "name": "Identifier",
                                "src": "1445:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 96,
                                  "type": "string memory",
                                  "value": "licensePlate"
                                },
                                "id": 102,
                                "name": "Identifier",
                                "src": "1450:12:0"
                              }
                            ],
                            "id": 103,
                            "name": "IndexAccess",
                            "src": "1445:18:0"
                          }
                        ],
                        "id": 104,
                        "name": "MemberAccess",
                        "src": "1445:28:0"
                      }
                    ],
                    "id": 105,
                    "name": "Return",
                    "src": "1438:35:0"
                  }
                ],
                "id": 106,
                "name": "Block",
                "src": "1428:52:0"
              }
            ],
            "id": 107,
            "name": "FunctionDefinition",
            "src": "1345:135:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getCarCertificationTimestamp",
              "scope": 141,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "licensePlate",
                      "scope": 120,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 108,
                        "name": "ElementaryTypeName",
                        "src": "1581:6:0"
                      }
                    ],
                    "id": 109,
                    "name": "VariableDeclaration",
                    "src": "1581:26:0"
                  }
                ],
                "id": 110,
                "name": "ParameterList",
                "src": "1580:28:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 120,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 111,
                        "name": "ElementaryTypeName",
                        "src": "1630:7:0"
                      }
                    ],
                    "id": 112,
                    "name": "VariableDeclaration",
                    "src": "1630:7:0"
                  }
                ],
                "id": 113,
                "name": "ParameterList",
                "src": "1629:9:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 113
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "certifiedTimestamp",
                          "referencedDeclaration": 33,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct CarKilometerCertification.Car storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 38,
                                  "type": "mapping(string memory => struct CarKilometerCertification.Car storage ref)",
                                  "value": "cars"
                                },
                                "id": 114,
                                "name": "Identifier",
                                "src": "1656:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 109,
                                  "type": "string memory",
                                  "value": "licensePlate"
                                },
                                "id": 115,
                                "name": "Identifier",
                                "src": "1661:12:0"
                              }
                            ],
                            "id": 116,
                            "name": "IndexAccess",
                            "src": "1656:18:0"
                          }
                        ],
                        "id": 117,
                        "name": "MemberAccess",
                        "src": "1656:37:0"
                      }
                    ],
                    "id": 118,
                    "name": "Return",
                    "src": "1649:44:0"
                  }
                ],
                "id": 119,
                "name": "Block",
                "src": "1639:61:0"
              }
            ],
            "id": 120,
            "name": "FunctionDefinition",
            "src": "1543:157:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getCarCertification",
              "scope": 141,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_licensePlate",
                      "scope": 140,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 121,
                        "name": "ElementaryTypeName",
                        "src": "1735:6:0"
                      }
                    ],
                    "id": 122,
                    "name": "VariableDeclaration",
                    "src": "1735:27:0"
                  }
                ],
                "id": 123,
                "name": "ParameterList",
                "src": "1734:29:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 140,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 124,
                        "name": "ElementaryTypeName",
                        "src": "1785:7:0"
                      }
                    ],
                    "id": 125,
                    "name": "VariableDeclaration",
                    "src": "1785:7:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 140,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 126,
                        "name": "ElementaryTypeName",
                        "src": "1794:7:0"
                      }
                    ],
                    "id": 127,
                    "name": "VariableDeclaration",
                    "src": "1794:7:0"
                  }
                ],
                "id": 128,
                "name": "ParameterList",
                "src": "1784:18:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 128
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(uint256,uint256)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "kilometer",
                              "referencedDeclaration": 31,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CarKilometerCertification.Car storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 38,
                                      "type": "mapping(string memory => struct CarKilometerCertification.Car storage ref)",
                                      "value": "cars"
                                    },
                                    "id": 129,
                                    "name": "Identifier",
                                    "src": "1817:4:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 122,
                                      "type": "string memory",
                                      "value": "_licensePlate"
                                    },
                                    "id": 130,
                                    "name": "Identifier",
                                    "src": "1822:13:0"
                                  }
                                ],
                                "id": 131,
                                "name": "IndexAccess",
                                "src": "1817:19:0"
                              }
                            ],
                            "id": 132,
                            "name": "MemberAccess",
                            "src": "1817:29:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "certifiedTimestamp",
                              "referencedDeclaration": 33,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct CarKilometerCertification.Car storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 38,
                                      "type": "mapping(string memory => struct CarKilometerCertification.Car storage ref)",
                                      "value": "cars"
                                    },
                                    "id": 133,
                                    "name": "Identifier",
                                    "src": "1848:4:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 122,
                                      "type": "string memory",
                                      "value": "_licensePlate"
                                    },
                                    "id": 134,
                                    "name": "Identifier",
                                    "src": "1853:13:0"
                                  }
                                ],
                                "id": 135,
                                "name": "IndexAccess",
                                "src": "1848:19:0"
                              }
                            ],
                            "id": 136,
                            "name": "MemberAccess",
                            "src": "1848:38:0"
                          }
                        ],
                        "id": 137,
                        "name": "TupleExpression",
                        "src": "1816:71:0"
                      }
                    ],
                    "id": 138,
                    "name": "Return",
                    "src": "1809:78:0"
                  }
                ],
                "id": 139,
                "name": "Block",
                "src": "1803:91:0"
              }
            ],
            "id": 140,
            "name": "FunctionDefinition",
            "src": "1706:188:0"
          }
        ],
        "id": 141,
        "name": "ContractDefinition",
        "src": "26:1871:0"
      }
    ],
    "id": 142,
    "name": "SourceUnit",
    "src": "0:1900:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x24AfeC5C0CaFD7410d3dFAfeBc1DeCDF3c6b5BB2",
      "transactionHash": "0xfa91a28314a84964c3c948dd8e53aaa6d434801148eb4d3660abe5b0d8f5d560"
    },
    "1683126297265": {
      "events": {},
      "links": {},
      "address": "0x48Be60fD8003269eeFa78fB5A429229C58642b3b",
      "transactionHash": "0x774ebad9b15770cbe1bbda454654737d9b11c0489c1b5258b23c409499c8fc47"
    },
    "1683126514456": {
      "events": {},
      "links": {},
      "address": "0xb13F0344842BBCE82672630C7aeA8f21Bf7d10BF",
      "transactionHash": "0x30fddd202a7d062131cb6d55c5ce38b7766d71bb1dc0a8ac9b8a1df58be736fa"
    },
    "1683127255462": {
      "events": {},
      "links": {},
      "address": "0xb13F0344842BBCE82672630C7aeA8f21Bf7d10BF",
      "transactionHash": "0x30fddd202a7d062131cb6d55c5ce38b7766d71bb1dc0a8ac9b8a1df58be736fa"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-05-08T09:33:21.840Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}